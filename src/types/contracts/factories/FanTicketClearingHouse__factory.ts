/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FanTicketClearingHouse,
  FanTicketClearingHouseInterface,
} from "../FanTicketClearingHouse";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct FanTicketClearingHouse.TransferOrder[]",
        name: "orders",
        type: "tuple[]",
      },
    ],
    name: "handleTransferOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063565482fb14610030575b600080fd5b61004361003e366004610368565b610045565b005b60005b81811015610328573683838381811061008a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020190508060a00160208101906100a691906103d9565b156101e2576100b8602082018261032d565b73ffffffffffffffffffffffffffffffffffffffff1663752702756100e3604084016020850161032d565b6100f3606085016040860161032d565b6060850135608086013561010d60e0880160c08901610411565b60405160e087811b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff96871660048301529490951660248601526044850192909252606484015260ff16608483015284013560a482015261010084013560c482015260e401602060405180830381600087803b1580156101a457600080fd5b505af11580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc91906103f5565b50610315565b6101ef602082018261032d565b73ffffffffffffffffffffffffffffffffffffffff1663554d67db61021a604084016020850161032d565b61022a606085016040860161032d565b6060850135608086013561024460e0880160c08901610411565b60405160e087811b7fffffffff0000000000000000000000000000000000000000000000000000000016825273ffffffffffffffffffffffffffffffffffffffff96871660048301529490951660248601526044850192909252606484015260ff16608483015284013560a482015261010084013560c482015260e401602060405180830381600087803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031391906103f5565b505b508061032081610432565b915050610048565b505050565b60006020828403121561033e578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610361578182fd5b9392505050565b6000806020838503121561037a578081fd5b823567ffffffffffffffff80821115610391578283fd5b818501915085601f8301126103a4578283fd5b8135818111156103b2578384fd5b866020610120830285010111156103c7578384fd5b60209290920196919550909350505050565b6000602082840312156103ea578081fd5b813561036181610490565b600060208284031215610406578081fd5b815161036181610490565b600060208284031215610422578081fd5b813560ff81168114610361578182fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610489577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b801515811461049e57600080fd5b5056fea26469706673582212200c44de4fbf2aad3f0a01396c4a0e67c6f24f20f1523ab6089af0d5db074b49da64736f6c63430008040033";

export class FanTicketClearingHouse__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FanTicketClearingHouse> {
    return super.deploy(overrides || {}) as Promise<FanTicketClearingHouse>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FanTicketClearingHouse {
    return super.attach(address) as FanTicketClearingHouse;
  }
  connect(signer: Signer): FanTicketClearingHouse__factory {
    return super.connect(signer) as FanTicketClearingHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FanTicketClearingHouseInterface {
    return new utils.Interface(_abi) as FanTicketClearingHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FanTicketClearingHouse {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FanTicketClearingHouse;
  }
}
